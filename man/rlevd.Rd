% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extremes.R
\name{rlevd}
\alias{rlevd}
\title{Calculation of the return levels.}
\usage{
rlevd(x, return.period = 100, error.estimation = c("none", "MC", "MLE"),
  monte.carlo.sample.size = 1000)
}
\arguments{
\item{x}{Parameter input. Class numeric, climex.gev.fit, gev.fit (ismev) or fevd (extRemes)}

\item{return.period}{Numeric vector of the return periods the return levels should be calculated at. Default = 100.}

\item{error.estimation}{Method of calculating the standard errors of the return levels. Using option "MLE" it is calculated using the Delta method and the MLE of the GEV parameters. Alternative one can use Monte Carlo simulations with "MC" for which monte.carlo.sample.size samples of the same size as x will be drawn from a GEV distribution constituted by the obtained MLE of the GEV parameters of x. The standard error is then calculated via the square of the variance of the calculated return levels. Sometimes the inversion of the hessian fails (since the are some NaN in the hessian) (which is also the reason why the ismev package occasionally does not work). Option "none" just skips the calculation of the error and return just a numeric value of the estimate. To avoid broken dependencies  with existing code this option will be default. Default = "none".}

\item{monte.carlo.sample.size}{Number of samples used to obtain the Monte Carlo estimate of the standard error of the fitting. Default = 1000}
}
\value{
If error.estimation == "none" a numerical vector containing the estimates of the return levels will be returned. Else a list containing the estimates and their standard errors will be returned.
}
\details{
Uses the extRemes::rlevd function at its core but also can handle multiple versions of the parameter input (as numeric, or direct outputs of various fitting procedures), is capable of calculating numerous return levels at once and also calculates the errors of the return levels. For the errors the ML fit is using the option hessian=TRUE (if not done already) or uses a Monte Carlo based approach. If no fitting object is provided, no errors will be calculated. The calculation of the error only works for objects fitted by gev.fit and not for ones fitted by foreign packages. Since it is also able of calculating the return levels for the output of the *extRemes::fevd()* function I decided to mask the original function from this package.
}
\examples{
fit.results <- gev.fit( block( anomalies( temp.potsdam ) ) )
rlevd( fit.results, return.period = c( 10, 50, 100 ), error.estimation = "MLE" )
}

